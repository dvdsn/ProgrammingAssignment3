## 0. Set up
library(dplyr)
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
datafile <- "Dataset.zip"
download.file(url, datafile)
unzip(datafile)
## 1. Merges the training and the test sets to create one data set.
data_directory <- c("UCI HAR Dataset/test/", 
                    "UCI HAR Dataset/train/")
# Subject identifiers
sfile <-c("subject_test.txt",
          "subject_train.txt")
# Activity labels
yfile <- c("y_test.txt", 
           "y_train.txt")
# Feature vectors
xfile <- c("X_test.txt",
           "X_train.txt")
# Number of rows in each feature vector X_* file
nrows_vec <- c(2947, 7352)
# Initialize a data table with var. names that read.table uses
tmp <- data.frame(s = NA, 
  y = NA, 
  matrix(NA,1,561))
d <- tbl_df(tmp)
d <- filter(d, !is.na(X1))
rm(tmp)
names(d) <- c("s", "y", paste("V", 1:561, sep=""))
d
# Read in data for test and train, and combine
for(i in 1:2){
   s <- read.table(paste(data_directory[i], sfile[i], sep=""))
   y <- read.table(paste(data_directory[i], yfile[i], sep=""))
   x <- read.table(paste(data_directory[i], xfile[i], sep=""), 
                comment.char="", 
nrows=nrows_vec[i],
colClasses = numeric())
   tmp <- data.frame(s = s[,1], y = y[,1], x)
   d <- rbind(d, tmp)
   rm(tmp, s, y, x)
}
## 2. Extracts measurements with the mean and standard deviation for each measurement.
f <- read.table(paste("UCI HAR Dataset", "features.txt", sep="/"), header=F)
names(f) <- c("index","feature")
idx_mean <- grep("-mean()", f$feature, fixed=TRUE)
idx_std <- grep("-std()", f$feature, fixed=TRUE)
d <- d %>% 
select(s, y, idx_mean + 2, idx_std + 2)
d
dim(d)
d
f <- read.table(paste("UCI HAR Dataset", "features.txt", sep="/"), header=F)
names(f) <- c("index","feature")
idx_mean <- grep("-mean()", f$feature, fixed=TRUE)
idx_std <- grep("-std()", f$feature, fixed=TRUE)
d <- d %>% 
select(s, y, idx_mean + 2, idx_std + 2)
d
# Initialize a data table with var. names that read.table uses
tmp <- data.frame(s = NA, 
  y = NA, 
  matrix(NA,1,561))
d <- tbl_df(tmp)
rm(tmp)
names(d) <- c("s", "y", paste("V", 1:561, sep=""))
for(i in 1:2){
   s <- read.table(paste(data_directory[i], sfile[i], sep=""))
   y <- read.table(paste(data_directory[i], yfile[i], sep=""))
   x <- read.table(paste(data_directory[i], xfile[i], sep=""), 
                comment.char="", 
nrows=nrows_vec[i],
colClasses = numeric())
   tmp <- data.frame(s = s[,1], y = y[,1], x)
   d <- rbind(d, tmp)
   rm(tmp, s, y, x)
}
d <- filter(d, !is.na(V1))
d
dim(d)
## 2. Extracts measurements with the mean and standard deviation for each measurement.
f <- read.table(paste("UCI HAR Dataset", "features.txt", sep="/"), header=F)
names(f) <- c("index","feature")
idx_mean <- grep("-mean()", f$feature, fixed=TRUE)
idx_std <- grep("-std()", f$feature, fixed=TRUE)
d <- d %>% 
select(s, y, idx_mean + 2, idx_std + 2)
d
d$y <- recode(d$y, 
              `1`="walking",
              `2`="walking_upstairs",
              `3`="walking_downstairs",
              `4`="sitting",
              `5`="standing",
              `6`="laying")
d
## 4. Appropriately labels the data set with descriptive variable names.
names_vec <- c("subject", 
               "activity", 
               as.character(f$feature[idx_mean]), 
               as.character(f$feature[idx_std]))
names_vec <- sub("mean\\(\\)", "mn", names_vec)
names_vec <- sub("std\\(\\)", "sd", names_vec)
names_vec <- gsub("-", "_", names_vec)
names(d) <- names_vec
d
m <- d %>% 
group_by(subject, activity) %>%
summarise_each(funs(mean), names_vec[3:68])
d
m
d
m
is.factor(d$activity)
is.factor(d$subject)
d$y <- as.factor(d$y)
relevel(d$y, base="laying")
d
d$y <- as.factor(d$y)
as.factor(d$y)
d$y
d
as.factor(d$activity)
d$activity <- as.factor(d$activity)
d$activity <- relevel(d$activity, base="laying")
d$activity <- relevel(d$activity, ref="laying")
d
d$subject <- paste("s",d$subject,sep="")
d
d$subject <- as.factor(d$subject)
d
str(d)
help(str)
str(d, give.head=F)
str(d, give.head=T)
str(d, give.head=F)
help(str)
str(d, give.head=F, no.list=F)
help(str)
str(d, give.head=F, no.list=F)
help(str)
str(d, give.head=F, no.list=F, give.attr=F)
help(str)
str(d, give.head=F, no.list=F, give.attr=F, vec.len=0)
help(str)
str(d)
str(d, give.head=F, no.list=F, give.attr=F)
str(d)
str(m)
m
is.factor(m$subject)
is.factor(m$activity)
m$subject <- as.factor(m$subject)
m$activity <- as.factor(m$activity)
m$activity <- relevel(m$activity, ref="laying")
m
str(m)
d
m
write.table(d, "d.txt")
write.table(m, "m.txt")
dir()
q()
